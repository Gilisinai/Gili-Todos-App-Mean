{"version":3,"sources":["./src/environments/environment.ts","./src/app/error/error.component.ts","./src/app/error/error.component.html","./src/app/posts/todo-create/todo-create.component.ts","./src/app/posts/todo-create/todo-create.component.html","./src/app/posts/todo.module.ts","./src/app/auth/auth.guard.ts","./src/app/error-interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/posts/todo-list/todo-list.component.html","./src/app/posts/todo-list/todo-list.component.ts","./src/app/auth/auth-interceptor.ts","./src/app/posts/todos.service.ts","./src/app/auth/auth.service.ts","./src/app/angular-material.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:3000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject } from \"@angular/core\";\r\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n    templateUrl: './error.component.html'\r\n})\r\nexport class ErrorComponent {\r\n    constructor(@Inject(MAT_DIALOG_DATA) public data: {message: string}) {}\r\n}","<h1 mat-dialog-title> An Error Occured!</h1>\r\n<div mat-dialog-content>\r\n    <p>{{ data.message }}</p>\r\n</div>\r\n<div mat-dialog-actions>\r\n    <button mat-button mat-dialog-close>Okay</button>\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core'\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\r\nimport { ActivatedRoute, ParamMap } from '@angular/router'\r\nimport { Subscription } from 'rxjs'\r\nimport { AuthService } from 'src/app/auth/auth.service'\r\n\r\nimport { TodoService } from '../todos.service'\r\nimport { Todo } from '../todo.model'\r\n\r\n\r\n@Component({\r\n    selector: 'app-post-create',\r\n    templateUrl: './todo-create.component.html',\r\n    styleUrls: ['./todo-create.component.css']\r\n})\r\nexport class TodoCreateComponent implements OnInit, OnDestroy {\r\n\r\n    enteredContent= ''\r\n    enteredTitle=''\r\n    todo: Todo;\r\n    isLoading = false;\r\n    form: FormGroup\r\n    private mode = 'create'\r\n    private todoId: string\r\n    private authStatusSub: Subscription\r\n\r\n    constructor(public todosService: TodoService, public route: ActivatedRoute, private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        this.authStatusSub = this.authService.getAuthStatusListenter().subscribe(\r\n            authStatus => {\r\n                this.isLoading = false\r\n            })\r\n        this.form = new FormGroup({\r\n            title: new FormControl(null, \r\n                {validators: [Validators.required, Validators.minLength(3)]\r\n            }),\r\n            content: new FormControl(null,\r\n                 {validators: [Validators.required]\r\n            })\r\n        })\r\n        this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n            if(paramMap.has('postId')) {\r\n                this.mode = 'edit'\r\n                this.todoId = paramMap.get('postId')\r\n                this.isLoading = true\r\n                this.todosService.getTodo(this.todoId).subscribe(todoData => {\r\n                    this.isLoading = false\r\n                    this.todo = {id: todoData._id, title: todoData.title, content: todoData.content, isCompleted: todoData.isCompleted, creator: todoData.creator}\r\n                    this.form.setValue({\r\n                        title: this.todo.title,\r\n                        content: this.todo.content\r\n                    })\r\n                })\r\n\r\n            } else {\r\n                this.mode = 'create'\r\n                this.todoId = null\r\n            }\r\n        })\r\n    }\r\n\r\n    onSaveTodo() {\r\n        if(this.form.invalid) {\r\n            return\r\n        }\r\n        this.isLoading = true\r\n        if (this.mode === 'create') {\r\n            this.todosService.addTodo(this.form.value.title, this.form.value.content, this.form.value.isCompleted)\r\n        } else {\r\n            this.todosService.updateTodo(this.todoId, this.form.value.title, this.form.value.content, this.form.value.isCompleted)\r\n        }\r\n        this.form.reset()\r\n    }\r\n\r\n    ngOnDestroy() {\r\n       this.authStatusSub.unsubscribe() \r\n    }\r\n}","<mat-card>\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n    <form [formGroup]=\"form\"  (submit)=\"onSaveTodo()\"  *ngIf=\"!isLoading\">\r\n        <mat-form-field>\r\n            <input \r\n            matInput \r\n            type=\"text\"  \r\n            formControlName=\"title\"          \r\n            placeholder=\"Todo Title\"\r\n            >\r\n            <mat-error *ngIf=\"form.get('title').invalid\">Please enter a valid title</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <textarea \r\n            matInput \r\n            formControlName=\"content\"\r\n            rows=\"4\" \r\n            placeholder=\"Todo Content\"\r\n            ></textarea>\r\n            <mat-error *ngIf=\"form.get('content').invalid\">Please enter a valid content</mat-error>\r\n        </mat-form-field>\r\n        <button \r\n        mat-raised-button \r\n        color=\"accent\"\r\n        type=\"submit\"\r\n        >Save Todo</button>\r\n    </form>\r\n</mat-card>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { AngularMaterialModule } from \"../angular-material.module\";\r\n\r\nimport {TodoCreateComponent} from './todo-create/todo-create.component'\r\nimport {TodoListCopmonent} from './todo-list/todo-list.component'\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        TodoCreateComponent,\r\n        TodoListCopmonent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        AngularMaterialModule,\r\n        RouterModule\r\n    ]\r\n})\r\nexport class TodosModule {}","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {}\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n         state: RouterStateSnapshot\r\n         ): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n             const isAuth = this.authService.getIsAuth()\r\n             if(!isAuth) {\r\n                this.router.navigate(['/auth/login']) \r\n             }\r\n            return isAuth\r\n    }\r\n\r\n}","import { HttpErrorResponse, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError } from \"rxjs/operators\";\r\nimport { ErrorComponent } from \"./error/error.component\";\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private dialog: MatDialog) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        return next.handle(req).pipe(\r\n            catchError((error: HttpErrorResponse) => {\r\n                let errorMessage = \"An unknown error occurred!\"\r\n                if(error.error.message) {\r\n                    errorMessage = error.error.message\r\n                }\r\n                this.dialog.open(ErrorComponent, {data: {message: errorMessage}}) \r\n                return throwError(error)\r\n            })\r\n        )\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() {\n    this.authService.autoAuthUser()\n  }\n}\n","<app-header></app-header>\n<main>\n    <router-outlet></router-outlet>\n</main>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthInterceptor } from './auth/auth-interceptor';\r\nimport { ErrorInterceptor } from './error-interceptor';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { TodosModule } from './posts/todo.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    ErrorComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AngularMaterialModule,\r\n    TodosModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ErrorComponent]\r\n})\r\nexport class AppModule { }\r\n","<mat-toolbar color=\"primary\">\r\n    <span><a routerLink=\"/\">MyList</a></span>\r\n    <ul>\r\n        <li *ngIf=\"userIsAuthenticated\">\r\n            <a mat-button routerLink=\"/create\" routerLinkActive=\"mat-accent\">New ToDo</a>\r\n        </li>\r\n        <li *ngIf=\"!userIsAuthenticated\">\r\n            <a mat-button routerLink=\"/auth/login\" routerLinkActive=\"mat-accent\">Login</a>\r\n        </li>\r\n        <li *ngIf=\"!userIsAuthenticated\">\r\n            <a mat-button routerLink=\"/auth/signup\" routerLinkActive=\"mat-accent\">Signup</a>\r\n        </li>\r\n        <li *ngIf=\"userIsAuthenticated\">\r\n            <button mat-button (click)=\"onLogout()\">Logout</button>\r\n        </li>\r\n    </ul>\r\n</mat-toolbar>","import { Component, OnDestroy, OnInit } from '@angular/core'\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n    userIsAuthenticated = false\r\n    private authListenerSubs: Subscription;\r\n\r\n    constructor(private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        this.userIsAuthenticated = this.authService.getIsAuth()\r\n        this.authListenerSubs = this.authService\r\n            .getAuthStatusListenter()\r\n            .subscribe(isAuthenticated => {\r\n                this.userIsAuthenticated = isAuthenticated\r\n            })\r\n    }\r\n\r\n    onLogout() {\r\n        this.authService.logout()\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authListenerSubs.unsubscribe()\r\n    }\r\n}","<mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n<mat-accordion  *ngIf=\"todos.length > 0 && !isLoading\">\r\n    <mat-expansion-panel *ngFor=\"let todo of todos\">\r\n        <mat-expansion-panel-header>\r\n            <mat-panel-title [ngClass]=\"{ 'done-mark': todo.isCompleted}\">\r\n                {{ todo.title }}\r\n            </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <p>{{ todo.content }} </p>\r\n        <mat-action-row *ngIf=\"userIsAuthenticated && userId == todo.creator\">\r\n            <button mat-button color=\"accent\" *ngIf=\"!todo.isCompleted\" (click)=\"onToggleCheck(todo)\" value=\"mark as done\">MARK AS DONE</button>\r\n            <button mat-button color=\"accent\"  *ngIf=\"todo.isCompleted\" (click)=\"onToggleCheck(todo)\" value=\"mark as done\">MARK AS NOT DONE</button>\r\n            <a mat-button color=\"primary\" [routerLink]=\"['/edit', todo.id]\">EDIT</a>\r\n            <button mat-button color=\"warn\" (click)=\"onDelete(todo.id)\">DELETE</button>\r\n        </mat-action-row>\r\n    </mat-expansion-panel>\r\n</mat-accordion>\r\n<mat-paginator [length]=\"totalPosts\" [pageSize]=\"todosPerPage\" [pageSizeOptions]='pageSizeOptions' (page)=\"onChangedPage($event)\"  *ngIf=\"todos.length > 0\"></mat-paginator>\r\n<p class=\"info-text\" *ngIf=\"todos.length <= 0 && !isLoading\"> No Todos added yet! </p>","import { Component, OnDestroy, OnInit } from '@angular/core'\r\nimport { PageEvent } from '@angular/material/paginator'\r\nimport { Subscription } from 'rxjs'\r\nimport { AuthService } from 'src/app/auth/auth.service'\r\n\r\nimport { Todo } from '../todo.model'\r\nimport { TodoService } from '../todos.service'\r\n\r\n@Component({\r\n    selector: 'app-post-list',\r\n    templateUrl: './todo-list.component.html',\r\n    styleUrls: ['./todo-list.component.css']\r\n})\r\nexport class TodoListCopmonent implements OnInit, OnDestroy {\r\n\r\n    todos: Todo[] = []\r\n    isLoading = false\r\n    totalPosts = 0\r\n    todosPerPage = 5;\r\n    currentPage = 1\r\n    pageSizeOptions = [1,2,5,10]\r\n    userIsAuthenticated = false\r\n    userId: string;\r\n    private todosSub: Subscription;\r\n    private authStatusSub: Subscription;\r\n\r\n    constructor(public todosService: TodoService, private authService: AuthService) {}\r\n\r\n    ngOnInit() {\r\n        this.isLoading = true\r\n        this.userId = this.authService.getUserId()\r\n        this.todosService.getTodos(this.todosPerPage, this.currentPage, this.userId);\r\n        this.todosSub = this.todosService.getTodoUpdateListener().subscribe((todosData: {posts: Todo[], postCount: number}) => {\r\n            this.isLoading = false\r\n            this.totalPosts = todosData.postCount\r\n            this.todos = todosData.posts\r\n        })\r\n        this.userIsAuthenticated = this.authService.getIsAuth()\r\n        this.authStatusSub = this.authService\r\n            .getAuthStatusListenter()\r\n            .subscribe(isAuthenticated => {\r\n                this.userIsAuthenticated = isAuthenticated\r\n                this.userId = this.authService.getUserId()\r\n            })\r\n    }\r\n\r\n    onChangedPage(pageData: PageEvent) {\r\n        this.isLoading = true\r\n        this.currentPage = pageData.pageIndex + 1\r\n        this.todosPerPage = pageData.pageSize\r\n        this.todosService.getTodos(this.todosPerPage, this.currentPage,this.userId);\r\n    }\r\n\r\n    onToggleCheck(post: Todo) {\r\n        console.log(this.todos)\r\n        this.todosService.toggleCheck(post)\r\n        const toCheck = this.todos.find(todo => todo.id == post.id)\r\n        toCheck.isCompleted = !toCheck.isCompleted\r\n        \r\n    }\r\n   \r\n    onDelete(todoId: string) {\r\n        this.isLoading = true\r\n        this.todosService.deleteTodo(todoId).subscribe(() => {\r\n            this.todosService.getTodos(this.todosPerPage, this.currentPage, this.userId)\r\n        }, () => {\r\n            this.isLoading = false\r\n        })\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.todosSub.unsubscribe()\r\n        this.authStatusSub.unsubscribe()\r\n    }\r\n}","import { HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) {}\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const authToken = this.authService.getToken()\r\n        console.log(authToken)\r\n        const authRequest = req.clone({\r\n            headers: req.headers.set('Authorization', \"Bearer \" + authToken)\r\n        })\r\n        return next.handle(authRequest)\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs'\r\nimport { HttpClient } from \"@angular/common/http\"\r\nimport { map } from 'rxjs/operators'\r\n\r\nimport { Todo } from './todo.model'\r\nimport { Router } from '@angular/router';\r\nimport { environment } from '../../environments/environment'\r\n\r\nlet BACKEND_URL: string;\r\n\r\nBACKEND_URL = `/api/todos`;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class TodoService {\r\n    private todos: Todo[] = []\r\n    private todosUpdated = new Subject<{posts: Todo[], postCount: number}>()\r\n\r\n    constructor(private http: HttpClient, private router: Router) { }\r\n\r\n    getTodos(todosPerPage: number, currentPage: number , userId: string) {\r\n        const queryParams = `?pagesize=${todosPerPage}&page=${currentPage}&userid=${userId}`\r\n        this.http.get<{message: string, posts: any, maxPosts: number}>(`${BACKEND_URL}${queryParams}`)\r\n            .pipe(map((todoData) => {\r\n                return {posts: todoData.posts.map(todo => {\r\n                    return {\r\n                        title: todo.title,\r\n                        content: todo.content,\r\n                        isCompleted: todo.isCompleted,\r\n                        id: todo._id,\r\n                        creator: todo.creator\r\n                    }\r\n                }) , maxPosts: todoData.maxPosts}\r\n            }))\r\n            .subscribe(transformedPostsData => {\r\n                this.todos = transformedPostsData.posts\r\n                this.todosUpdated.next({posts: [...this.todos], postCount: transformedPostsData.maxPosts })\r\n            })\r\n    }\r\n\r\n    getTodoUpdateListener() {\r\n        return this.todosUpdated.asObservable()\r\n    }\r\n\r\n    getTodo(id: string) {\r\n        return this.http.get<{_id: string; title: string; content: string; isCompleted: boolean; creator: string;}>(`${BACKEND_URL}${id}`)\r\n    }\r\n\r\n    addTodo(title: string, content: string, isCompleted: boolean) {\r\n        const todo: Todo = {id: null, title: title,isCompleted: isCompleted, content: content, creator: null }\r\n        this.http.post<{message: string, postId: string}>(BACKEND_URL, todo)\r\n         .subscribe((responseData) => {\r\n            this.router.navigate([\"/\"])\r\n         })\r\n    }\r\n\r\n    updateTodo(id: string, title: string, content: string, isCompleted: boolean) {\r\n        const todo: Todo = { id: id, title: title, content: content, isCompleted: isCompleted,  creator: null}\r\n        this.http.put(`${BACKEND_URL}${id}`, todo)\r\n            .subscribe(response => {\r\n                this.router.navigate([\"/\"])\r\n            })\r\n    }\r\n\r\n    toggleCheck(todo:Todo) {\r\n        console.log(\"entered toggle check\")\r\n        this.http.put(`${BACKEND_URL}toggle/${todo.id}`,todo)\r\n            .subscribe(response => {\r\n                console.log(response)\r\n            })\r\n    }\r\n\r\n\r\n    deleteTodo(todoId: string) {\r\n        return this.http.delete(`${BACKEND_URL}${todoId}`)\r\n         \r\n    }\r\n}","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\nimport { AuthData } from \"./auth-data.model\";\r\n\r\nlet BACKEND_URL: string;\r\n\r\nBACKEND_URL = `/api/users`;\r\n\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthService {\r\n    private token: string = ''\r\n    private authStatusListener = new Subject<boolean>()\r\n    private isAuthenticated = false;\r\n    private tokenTimer: any;\r\n    private userId: string;\r\n\r\n    constructor(private http: HttpClient, private router: Router) { }\r\n\r\n    getToken() {\r\n        return this.token\r\n    }\r\n\r\n    getIsAuth() {\r\n        return this.isAuthenticated\r\n    }\r\n\r\n    getUserId() {\r\n        return this.userId\r\n    }\r\n\r\n    getAuthStatusListenter() {\r\n        return this.authStatusListener.asObservable()\r\n    }\r\n\r\n    createUser(email: string, password: string) {\r\n        const authData: AuthData = { email: email, password: password }\r\n        return this.http.post(`${BACKEND_URL}/signup`, authData)\r\n        .subscribe(() => {\r\n            this.router.navigate(['/'])\r\n        }, error => {\r\n            console.log(error)\r\n            this.authStatusListener.next(false)\r\n        })\r\n    }\r\n\r\n    login(email: string, password: string) {\r\n        const authData: AuthData = { email: email, password: password }\r\n        this.http.post<{ token: string, expiresIn: number, userId: string }>(`${BACKEND_URL}/login`, authData, {responseType: 'json'})\r\n            .subscribe(response => {\r\n                console.log('response', response)\r\n\r\n                const token = response.token\r\n                this.token = token\r\n                if (token) {\r\n                    const expiresInDuration = response.expiresIn\r\n                    this.setAuthTimer(expiresInDuration)\r\n                    this.isAuthenticated = true\r\n                    this.userId = response.userId\r\n                    this.authStatusListener.next(true)\r\n                    const now = new Date()\r\n                    const expirationDate = new Date(now.getTime() + expiresInDuration * 1000)\r\n                    this.saveAuthData(token, expirationDate, this.userId)\r\n                    this.router.navigate(['/'])\r\n                }\r\n            }, error => {\r\n                this.authStatusListener.next(false)\r\n                console.log('error', error)\r\n\r\n            })\r\n    }\r\n\r\n    autoAuthUser() {\r\n        const authInformation = this.getAuthData()\r\n        if(!authInformation) {\r\n            return\r\n        }\r\n        const now = new Date();\r\n        const expiresIn = authInformation.expirationDate.getTime() - now.getTime()\r\n        if (expiresIn > 0) {\r\n            this.token = authInformation.token\r\n            this.isAuthenticated = true\r\n            this.userId = authInformation.userId\r\n            this.setAuthTimer(expiresIn / 1000)\r\n            this, this.authStatusListener.next(true)\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.token = null\r\n        this.isAuthenticated = false\r\n        this.authStatusListener.next(false)\r\n        this.userId = null\r\n        clearTimeout(this.tokenTimer)\r\n        this.clearAuthData()\r\n        this.router.navigate(['/auth/login'])\r\n    }\r\n\r\n    private setAuthTimer(duration: number) {\r\n        this.tokenTimer = setTimeout(() => {\r\n            this.logout()\r\n        }, duration * 1000)\r\n    }\r\n\r\n    private saveAuthData(token: string, expirationDate: Date, userId: string) {\r\n        localStorage.setItem('token', token)\r\n        localStorage.setItem('expiration', expirationDate.toISOString())\r\n        localStorage.setItem('userId', userId)\r\n    }\r\n\r\n    private clearAuthData() {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('expiration')\r\n        localStorage.removeItem('userId')\r\n    }\r\n\r\n    private getAuthData() {\r\n        const token = localStorage.getItem('token')\r\n        const expirationDate = localStorage.getItem('expiration')\r\n        const userId = localStorage.getItem('userId')\r\n        if (!token && expirationDate) {\r\n            return\r\n        }\r\n        return {\r\n            token: token,\r\n            expirationDate: new Date(expirationDate),\r\n            userId: userId\r\n        }\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\n\r\n\r\n@NgModule({\r\n    exports: [\r\n        MatInputModule,\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatToolbarModule,\r\n        MatExpansionModule,\r\n        MatProgressSpinnerModule,\r\n        MatPaginatorModule,\r\n        MatDialogModule,\r\n        MatCheckboxModule\r\n    ]\r\n})\r\nexport class AngularMaterialModule { }","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from \"./auth/auth.guard\";\r\nimport { TodoCreateComponent } from \"./posts/todo-create/todo-create.component\";\r\nimport { TodoListCopmonent } from \"./posts/todo-list/todo-list.component\";\r\n\r\nconst routes: Routes = [\r\n    { path: '', component: TodoListCopmonent , canActivate: [AuthGuard] },\r\n    { path: 'create' , component: TodoCreateComponent, canActivate: [AuthGuard]},\r\n    { path: 'edit/:postId', component: TodoCreateComponent,  canActivate: [AuthGuard]},\r\n    { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)}\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n    providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule { }","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}